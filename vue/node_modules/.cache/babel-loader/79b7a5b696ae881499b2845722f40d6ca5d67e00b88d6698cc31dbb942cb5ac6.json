{"ast":null,"code":"export default {\n  name: \"Posts\",\n  data() {\n    return {\n      tableData: [],\n      // 所有的数据\n      pageNum: 1,\n      // 当前的页码\n      pageSize: 10,\n      // 每页显示的个数\n      total: 0,\n      title: null,\n      formVisible: false,\n      form: {},\n      content: '',\n      formVisible1: false,\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      rules: {\n        title: [{\n          required: true,\n          message: '请输入标题',\n          trigger: 'blur'\n        }]\n      },\n      ids: []\n    };\n  },\n  created() {\n    this.load(1);\n  },\n  methods: {\n    changeStatus(row, status) {\n      this.$confirm('您确定' + status + '吗？', '确认操作', {\n        type: \"warning\"\n      }).then(response => {\n        this.form = JSON.parse(JSON.stringify(row));\n        this.form.status = status;\n        this.$request.put('/postss/update', this.form).then(res => {\n          if (res.code === '200') {\n            // 表示成功保存\n            this.$message.success('操作成功');\n            this.load(1);\n          } else {\n            this.$message.error(res.msg); // 弹出错误的信息\n          }\n        });\n      }).catch(err => {});\n    },\n    preview(content) {\n      this.content = content;\n      this.formVisible1 = true;\n    },\n    handleFileSuccess(response, file, fileList) {\n      this.form.img = response.data;\n    },\n    handleAdd() {\n      // 新增数据\n      this.form = {}; // 新增数据的时候清空数据\n      this.fromVisible = true; // 打开弹窗\n    },\n\n    handleEdit(row) {\n      // 编辑数据\n      this.form = JSON.parse(JSON.stringify(row)); // 给form对象赋值  注意要深拷贝数据\n      this.fromVisible = true; // 打开弹窗\n    },\n\n    save() {\n      // 保存按钮触发的逻辑  它会触发新增或者更新\n      this.$refs.formRef.validate(valid => {\n        if (valid) {\n          this.$request({\n            url: this.form.id ? '/posts/update' : '/posts/add',\n            method: this.form.id ? 'PUT' : 'POST',\n            data: this.form\n          }).then(res => {\n            if (res.code === '200') {\n              // 表示成功保存\n              this.$message.success('保存成功');\n              this.load(1);\n              this.fromVisible = false;\n            } else {\n              this.$message.error(res.msg); // 弹出错误的信息\n            }\n          });\n        }\n      });\n    },\n\n    del(id) {\n      // 单个删除\n      this.$confirm('您确定删除吗？', '确认删除', {\n        type: \"warning\"\n      }).then(response => {\n        this.$request.delete('/posts/delete/' + id).then(res => {\n          if (res.code === '200') {\n            // 表示操作成功\n            this.$message.success('操作成功');\n            this.load(1);\n          } else {\n            this.$message.error(res.msg); // 弹出错误的信息\n          }\n        });\n      }).catch(() => {});\n    },\n    handleSelectionChange(rows) {\n      // 当前选中的所有的行数据\n      this.ids = rows.map(v => v.id); //  [1,2]\n    },\n\n    delBatch() {\n      // 批量删除\n      if (!this.ids.length) {\n        this.$message.warning('请选择数据');\n        return;\n      }\n      this.$confirm('您确定批量删除这些数据吗？', '确认删除', {\n        type: \"warning\"\n      }).then(response => {\n        this.$request.delete('/posts/delete/batch', {\n          data: this.ids\n        }).then(res => {\n          if (res.code === '200') {\n            // 表示操作成功\n            this.$message.success('操作成功');\n            this.load(1);\n          } else {\n            this.$message.error(res.msg); // 弹出错误的信息\n          }\n        });\n      }).catch(() => {});\n    },\n    load(pageNum) {\n      // 分页查询\n      if (pageNum) this.pageNum = pageNum;\n      this.$request.get('/posts/selectPage', {\n        params: {\n          pageNum: this.pageNum,\n          pageSize: this.pageSize,\n          title: this.title\n        }\n      }).then(res => {\n        this.tableData = res.data?.list;\n        this.total = res.data?.total;\n      });\n    },\n    reset() {\n      this.title = null;\n      this.load(1);\n    },\n    handleCurrentChange(pageNum) {\n      this.load(pageNum);\n    }\n  }\n};","map":{"version":3,"names":["name","data","tableData","pageNum","pageSize","total","title","formVisible","form","content","formVisible1","user","JSON","parse","localStorage","getItem","rules","required","message","trigger","ids","created","load","methods","changeStatus","row","status","$confirm","type","then","response","stringify","$request","put","res","code","$message","success","error","msg","catch","err","preview","handleFileSuccess","file","fileList","img","handleAdd","fromVisible","handleEdit","save","$refs","formRef","validate","valid","url","id","method","del","delete","handleSelectionChange","rows","map","v","delBatch","length","warning","get","params","list","reset","handleCurrentChange"],"sources":["src/views/manager/Posts.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <div class=\"search\">\r\n        <el-input placeholder=\"请输入标题查询\" style=\"width: 200px\" v-model=\"title\"></el-input>\r\n        <el-button type=\"info\" plain style=\"margin-left: 10px\" @click=\"load(1)\">查询</el-button>\r\n        <el-button type=\"warning\" plain style=\"margin-left: 10px\" @click=\"reset\">重置</el-button>\r\n      </div>\r\n  \r\n      <div class=\"operation\">\r\n        \r\n        <el-button type=\"danger\" plain @click=\"delBatch\">批量删除</el-button>\r\n      </div>\r\n        <!-- id title content img user_id time circle comment_count-->\r\n      <div class=\"table\">\r\n        <el-table :data=\"tableData\" stripe  @selection-change=\"handleSelectionChange\">\r\n          <el-table-column type=\"selection\"  align=\"center\"></el-table-column>\r\n          <el-table-column prop=\"id\" label=\"id\"  align=\"center\" sortable></el-table-column>\r\n          <el-table-column prop=\"title\" label=\"标题\"  align=\"center\" sortable></el-table-column>\r\n          <el-table-column label=\"内容\">\r\n\t        <template v-slot=\"scope\">\r\n            <el-button @click=\"preview(scope.row.content)\">查看内容</el-button>\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column prop=\"img\" label=\"缩略图\"  align=\"center\" sortable>\r\n            <template v-slot=\"scope\">\r\n            <div style=\"display: flex; align-items: center\">\r\n            <el-image style=\"width: 40px; height: 40px;\" v-if=\"scope.row.img\"\r\n                :src=\"scope.row.img\" :preview-src-list=\"[scope.row.img]\"></el-image>\r\n            </div>\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column prop=\"userId\" label=\"用户Id\"  align=\"center\" sortable></el-table-column>\r\n          <el-table-column prop=\"userName\" label=\"用户名称\"  align=\"center\" sortable></el-table-column>\r\n          <el-table-column prop=\"time\" label=\"发布时间\"  align=\"center\" sortable></el-table-column>\r\n          <el-table-column prop=\"circle\" label=\"圈子\"  align=\"center\" sortable></el-table-column>\r\n          <el-table-column prop=\"descr\" label=\"圈子\"  align=\"center\" sortable></el-table-column>\r\n          <el-table-column prop=\"readCount\" label=\"阅读数量\"  align=\"center\" sortable></el-table-column>\r\n          <el-table-column prop=\"status\" label=\"审核状态\"  align=\"center\">\r\n                <template v-slot=\"scope\">\r\n                    <el-tag type =\"info\" v-if=\"scope.row.status==='待审核'\" >待审核</el-tag>\r\n                    <el-tag type =\"info\" v-if=\"scope.row.status==='通过'\" >通过</el-tag>\r\n                    <el-tag type =\"info\" v-if=\"scope.row.status==='拒绝'\" >拒绝</el-tag>\r\n                </template>\r\n          </el-table-column>\r\n          <el-table-column label=\"操作\" width=\"220\" align=\"center\">\r\n            <template v-slot=\"scope\">\r\n                <el-button plain type=\"success\" size=\"mini\" @click=\"changeStatus(scope.row, '通过')\">通过</el-button>\r\n                <el-button plain type=\"danger\" size=\"mini\" @click=\"changeStatus(scope.row, '拒绝')\">拒绝</el-button>\r\n              <el-button plain type=\"danger\" size=\"mini\" @click=del(scope.row.id)>删除</el-button>\r\n            </template>\r\n          </el-table-column>\r\n        </el-table>\r\n  \r\n        <div class=\"pagination\">\r\n          <el-pagination\r\n              background\r\n              @current-change=\"handleCurrentChange\"\r\n              :current-page=\"pageNum\"\r\n              :page-sizes=\"[5, 10, 20]\"\r\n              :page-size=\"pageSize\"\r\n              layout=\"total, prev, pager, next\"\r\n              :total=\"total\">\r\n          </el-pagination>\r\n        </div>\r\n      </div>\r\n  \r\n        <el-dialog title=\"文章内容\" :visible.sync=\"formVisible1\" width=\"40%\" :close-on-click-modal=\"false\" destroy-on-close>\r\n            <div class=\"w-e-text\">\r\n                <div v-html=\"content\"></div>\r\n            </div>\r\n        <div slot=\"footer\" class=\"dialog-footer\">\r\n            <el-button @click=\"formVisible1=false\">关 闭</el-button>\r\n        </div>\r\n        </el-dialog>\r\n  \r\n      <el-dialog name=\"圈子\" :visible.sync=\"fromVisible\" width=\"40%\" :close-on-click-modal=\"false\" destroy-on-close>\r\n        <el-form label-width=\"100px\" style=\"padding-right: 50px\" :model=\"form\" :rules=\"rules\" ref=\"formRef\">\r\n          <el-form-item prop=\"title\" label=\"标题\">\r\n            <el-input v-model=\"form.title\" autocomplete=\"off\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item prop=\"img\" label=\"缩略图\">\r\n            <el-upload\r\n                :action=\"$baseUrl + '/files/upload'\"\r\n                :headers=\"{ token: user.token }\"\r\n                :on-success=\"handleFileSuccess\"\r\n            >\r\n            <el-button type=\"primary\">上传</el-button>\r\n            </el-upload>\r\n          </el-form-item>\r\n\r\n          <el-form-item prop=\"content\" label=\"内容\">\r\n            <el-input v-model=\"form.content\" autocomplete=\"off\"></el-input>\r\n          </el-form-item>\r\n\r\n          <el-form-item prop=\"user_id\" label=\"用户ID\">\r\n            <el-input v-model=\"form.user_id\" autocomplete=\"off\"></el-input>\r\n          </el-form-item>\r\n \r\n          <el-form-item prop=\"time\" label=\"发布时间\">\r\n            <el-input v-model=\"form.time\" autocomplete=\"off\"></el-input>\r\n          </el-form-item>\r\n\r\n          <el-form-item prop=\"circle\" label=\"圈子\">\r\n            <el-input v-model=\"form.circle\" autocomplete=\"off\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item prop=\"comment_count\" label=\"评论\">\r\n            <el-input v-model=\"form.comment_count\" autocomplete=\"off\"></el-input>\r\n          </el-form-item>\r\n          \r\n        </el-form>\r\n        <div slot=\"footer\" class=\"dialog-footer\">\r\n          <el-button @click=\"fromVisible = false\">取 消</el-button>\r\n          <el-button type=\"primary\" @click=\"save\">确 定</el-button>\r\n        </div>\r\n      </el-dialog>\r\n  \r\n  \r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n    name: \"Posts\",\r\n    data() {\r\n      return {\r\n        tableData: [],  // 所有的数据\r\n        pageNum: 1,   // 当前的页码\r\n        pageSize: 10,  // 每页显示的个数\r\n        total: 0,\r\n        title: null,\r\n        formVisible: false,\r\n        form: {},\r\n        content:'',\r\n        formVisible1: false,\r\n        user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\r\n        rules: {\r\n          title: [\r\n            {required: true, message: '请输入标题', trigger: 'blur'},\r\n          ]\r\n        },\r\n        ids: []\r\n      }\r\n    },\r\n    created() {\r\n      this.load(1)\r\n    },\r\n    methods: {\r\n        changeStatus(row, status){\r\n            this.$confirm('您确定' + status + '吗？','确认操作', {type:\"warning\"}).then(response => {\r\n                this.form = JSON.parse(JSON.stringify(row))\r\n                this.form.status = status\r\n                this.$request.put('/postss/update', this.form).then(res => {\r\n                if (res.code === '200') {  // 表示成功保存\r\n                    this.$message.success('操作成功')\r\n                    this.load(1)\r\n                } else {\r\n                    this.$message.error(res.msg)  // 弹出错误的信息\r\n                }\r\n            })\r\n            }).catch(err => {})\r\n        },\r\n        preview(content){\r\n\t        this.content = content\r\n\t        this.formVisible1 = true\r\n        },\r\n        handleFileSuccess(response, file, fileList) {\r\n            this.form.img = response.data\r\n        },\r\n      handleAdd() {   // 新增数据\r\n        this.form = {}  // 新增数据的时候清空数据\r\n        this.fromVisible = true   // 打开弹窗\r\n      },\r\n      handleEdit(row) {   // 编辑数据\r\n        this.form = JSON.parse(JSON.stringify(row))  // 给form对象赋值  注意要深拷贝数据\r\n        this.fromVisible = true   // 打开弹窗\r\n      },\r\n      save() {   // 保存按钮触发的逻辑  它会触发新增或者更新\r\n        this.$refs.formRef.validate((valid) => {\r\n          if (valid) {\r\n            this.$request({\r\n              url: this.form.id ? '/posts/update' : '/posts/add',\r\n              method: this.form.id ? 'PUT' : 'POST',\r\n              data: this.form\r\n            }).then(res => {\r\n              if (res.code === '200') {  // 表示成功保存\r\n                this.$message.success('保存成功')\r\n                this.load(1)\r\n                this.fromVisible = false\r\n              } else {\r\n                this.$message.error(res.msg)  // 弹出错误的信息\r\n              }\r\n            })\r\n          }\r\n        })\r\n      },\r\n      del(id) {   // 单个删除\r\n        this.$confirm('您确定删除吗？', '确认删除', {type: \"warning\"}).then(response => {\r\n          this.$request.delete('/posts/delete/' + id).then(res => {\r\n            if (res.code === '200') {   // 表示操作成功\r\n              this.$message.success('操作成功')\r\n              this.load(1)\r\n            } else {\r\n              this.$message.error(res.msg)  // 弹出错误的信息\r\n            }\r\n          })\r\n        }).catch(() => {\r\n        })\r\n      },\r\n      handleSelectionChange(rows) {   // 当前选中的所有的行数据\r\n        this.ids = rows.map(v => v.id)   //  [1,2]\r\n      },\r\n      delBatch() {   // 批量删除\r\n        if (!this.ids.length) {\r\n          this.$message.warning('请选择数据')\r\n          return\r\n        }\r\n        this.$confirm('您确定批量删除这些数据吗？', '确认删除', {type: \"warning\"}).then(response => {\r\n          this.$request.delete('/posts/delete/batch', {data: this.ids}).then(res => {\r\n            if (res.code === '200') {   // 表示操作成功\r\n              this.$message.success('操作成功')\r\n              this.load(1)\r\n            } else {\r\n              this.$message.error(res.msg)  // 弹出错误的信息\r\n            }\r\n          })\r\n        }).catch(() => {\r\n        })\r\n      },\r\n      load(pageNum) {  // 分页查询\r\n        if (pageNum) this.pageNum = pageNum\r\n        this.$request.get('/posts/selectPage', {\r\n          params: {\r\n            pageNum: this.pageNum,\r\n            pageSize: this.pageSize,\r\n            title: this.title,\r\n          }\r\n        }).then(res => {\r\n          this.tableData = res.data?.list\r\n          this.total = res.data?.total\r\n        })\r\n      },\r\n      reset() {\r\n        this.title = null\r\n        this.load(1)\r\n      },\r\n      handleCurrentChange(pageNum) {\r\n        this.load(pageNum)\r\n      },\r\n    }\r\n  }\r\n  </script>\r\n  \r\n  <style scoped>\r\n  \r\n  </style>\r\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}