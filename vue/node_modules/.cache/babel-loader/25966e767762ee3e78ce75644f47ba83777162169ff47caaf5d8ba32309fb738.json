{"ast":null,"code":"export default {\n  name: \"Goods\",\n  data() {\n    return {\n      tableData: [],\n      // 所有的数据\n      pageNum: 1,\n      // 当前的页码\n      pageSize: 10,\n      // 每页显示的个数\n      total: 0,\n      name: null,\n      fromVisible: false,\n      form: {},\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      rules: {\n        name: [{\n          required: true,\n          message: '请输入商品名称',\n          trigger: 'blur'\n        }]\n      },\n      ids: [],\n      content: '',\n      fromVisible1: false\n    };\n  },\n  created() {\n    this.load(1);\n  },\n  methods: {\n    preview(content) {\n      this.content = content;\n      this.fromVisible1 = true;\n    },\n    changeStatus(row, status) {\n      this.$confirm('您确定要操作吗？', '确认操作', {\n        type: \"warning\"\n      }).then(response => {\n        this.form = JSON.parse(JSON.stringify(row));\n        this.form.status = status;\n        this.$request.put('/goods/update', this.form).then(res => {\n          if (res.code === '200') {\n            // 表示成功保存\n            this.$message.success('保存成功');\n            this.load(1);\n          } else {\n            this.$message.error(res.msg); // 弹出错误的信息\n          }\n        });\n      }).catch(err => {});\n    },\n    handleAdd() {\n      // 新增数据\n      this.form = {}; // 新增数据的时候清空数据\n      this.fromVisible = true; // 打开弹窗\n    },\n\n    handleEdit(row) {\n      // 编辑数据\n      this.form = JSON.parse(JSON.stringify(row)); // 给form对象赋值  注意要深拷贝数据\n      this.fromVisible = true; // 打开弹窗\n    },\n\n    save() {\n      // 保存按钮触发的逻辑  它会触发新增或者更新\n      this.$refs.formRef.validate(valid => {\n        if (valid) {\n          this.$request({\n            url: this.form.id ? '/goods/update' : '/goods/add',\n            method: this.form.id ? 'PUT' : 'POST',\n            data: this.form\n          }).then(res => {\n            if (res.code === '200') {\n              // 表示成功保存\n              this.$message.success('保存成功');\n              this.load(1);\n              this.fromVisible = false;\n            } else {\n              this.$message.error(res.msg); // 弹出错误的信息\n            }\n          });\n        }\n      });\n    },\n\n    del(id) {\n      // 单个删除\n      this.$confirm('您确定删除吗？', '确认删除', {\n        type: \"warning\"\n      }).then(response => {\n        this.$request.delete('/goods/delete/' + id).then(res => {\n          if (res.code === '200') {\n            // 表示操作成功\n            this.$message.success('操作成功');\n            this.load(1);\n          } else {\n            this.$message.error(res.msg); // 弹出错误的信息\n          }\n        });\n      }).catch(() => {});\n    },\n    handleSelectionChange(rows) {\n      // 当前选中的所有的行数据\n      this.ids = rows.map(v => v.id); //  [1,2]\n    },\n\n    delBatch() {\n      // 批量删除\n      if (!this.ids.length) {\n        this.$message.warning('请选择数据');\n        return;\n      }\n      this.$confirm('您确定批量删除这些数据吗？', '确认删除', {\n        type: \"warning\"\n      }).then(response => {\n        this.$request.delete('/goods/delete/batch', {\n          data: this.ids\n        }).then(res => {\n          if (res.code === '200') {\n            // 表示操作成功\n            this.$message.success('操作成功');\n            this.load(1);\n          } else {\n            this.$message.error(res.msg); // 弹出错误的信息\n          }\n        });\n      }).catch(() => {});\n    },\n    load(pageNum) {\n      // 分页查询\n      if (pageNum) this.pageNum = pageNum;\n      this.$request.get('/goods/selectPage', {\n        params: {\n          pageNum: this.pageNum,\n          pageSize: this.pageSize,\n          name: this.name\n        }\n      }).then(res => {\n        console.log(res);\n        this.tableData = res.data?.list;\n        this.total = res.data?.total;\n      });\n    },\n    reset() {\n      this.name = null;\n      this.load(1);\n    },\n    handleCurrentChange(pageNum) {\n      this.load(pageNum);\n    }\n  }\n};","map":{"version":3,"names":["name","data","tableData","pageNum","pageSize","total","fromVisible","form","user","JSON","parse","localStorage","getItem","rules","required","message","trigger","ids","content","fromVisible1","created","load","methods","preview","changeStatus","row","status","$confirm","type","then","response","stringify","$request","put","res","code","$message","success","error","msg","catch","err","handleAdd","handleEdit","save","$refs","formRef","validate","valid","url","id","method","del","delete","handleSelectionChange","rows","map","v","delBatch","length","warning","get","params","console","log","list","reset","handleCurrentChange"],"sources":["src/views/manager/Goods.vue"],"sourcesContent":["<template>\n    <div>\n      <div class=\"search\">\n        <el-input placeholder=\"请输入名称查询\" style=\"width: 200px\" v-model=\"name\"></el-input>\n        <el-button type=\"info\" plain style=\"margin-left: 10px\" @click=\"load(1)\">查询</el-button>\n        <el-button type=\"warning\" plain style=\"margin-left: 10px\" @click=\"reset\">重置</el-button>\n      </div>\n  \n      <div class=\"operation\">\n        <el-button type=\"primary\" plain @click=\"handleAdd\">新增</el-button>\n        <el-button type=\"danger\" plain @click=\"delBatch\">批量删除</el-button>\n      </div>\n      <!--id,name,price,content,address,img,date,category,user_id.sale_status,read_count-->\n      <div class=\"table\">\n        <el-table :data=\"tableData\" stripe  @selection-change=\"handleSelectionChange\">\n          <el-table-column type=\"selection\" width=\"55\" align=\"center\"></el-table-column>\n          <el-table-column prop=\"id\" label=\"id\"  align=\"center\" sortable></el-table-column>\n          <el-table-column prop=\"name\" label=\"商品名称\"  align=\"center\" show-overflow-tooltip></el-table-column>\n          <el-table-column prop=\"price\" label=\"价格\"  align=\"center\"></el-table-column>\n          <el-table-column prop=\"content\" label=\"详情\" width=\"200\" align=\"center\">\n            <template v-slot=\"scope\">\n                <el-button @click = \"preview(scope.row.content)\">显示详情</el-button>\n            </template>\n          </el-table-column>\n          <el-table-column prop=\"address\" label=\"地址\"  align=\"center\"></el-table-column>\n          <el-table-column prop=\"img\" label=\"图片\"  align=\"center\" >\n            <template v-slot=\"scope\">\n            <el-image v-if=\"scope.row.img\" style=\"width:50px\" :src=\"scope.row.img\" :prewview-src-list=\"scope.row.img\"></el-image>\n          </template>\n          </el-table-column>\n          <el-table-column prop=\"date\" label=\"上架日期\"  align=\"center\"></el-table-column>\n\n          <el-table-column prop=\"status\" label=\"审核状态\"  align=\"center\">\n                <template v-slot=\"scope\">\n                  <el-button size=\"mini\" type=\"primary\" plain @click=\"handleEdit(scope.row)\">编辑</el-button>\n                    <el-tag type =\"info\" v-if=\"scope.row.status==='待审核'\" >待审核</el-tag>\n                    <el-tag type =\"info\" v-if=\"scope.row.status==='通过'\" >通过</el-tag>\n                    <el-tag type =\"info\" v-if=\"scope.row.status==='拒绝'\" >拒绝</el-tag>\n                </template>\n          </el-table-column>\n\n          <el-table-column prop=\"category\" label=\"类别\"  align=\"center\"></el-table-column>\n          <el-table-column prop=\"userId\" label=\"用户id\"  align=\"center\"></el-table-column>\n          <el-table-column prop=\"username\" label=\"用户名\"  align=\"center\"></el-table-column>\n          <el-table-column prop=\"saleStatus\" label=\"出售状态\"  align=\"center\"></el-table-column>\n          <el-table-column prop=\"readCount\" label=\"浏览量\"  align=\"center\"></el-table-column>\n          \n  \n          <el-table-column label=\"操作\" width=\"240\" align=\"center\">\n            <template v-slot=\"scope\">\n              \n            <el-button plain type=\"success\" size=\"mini\" @click=\"changeStatus(scope.row, '通过')\">通过</el-button>\n            <el-button plain type=\"danger\" size=\"mini\" @click=\"changeStatus(scope.row, '拒绝')\">拒绝</el-button>\n            <el-button plain type=\"danger\" size=\"mini\" @click=\"del(scope.row.id)\">删除</el-button>\n            </template>\n          </el-table-column>\n        </el-table>\n  \n        <div class=\"pagination\">\n          <el-pagination\n              background\n              @current-change=\"handleCurrentChange\"\n              :current-page=\"pageNum\"\n              :page-sizes=\"[5, 10, 20]\"\n              :page-size=\"pageSize\"\n              layout=\"total, prev, pager, next\"\n              :total=\"total\">\n          </el-pagination>\n        </div>\n      </div>\n  <el-dialog tittle=\"内容\" :visible.sync=\"fromVisible1\" width=\"40%\" :close-on-click-modal=\"false\" destroy-on-close>\n    <div v-html=\"content\"></div>\n  </el-dialog>\n  <!--id,name,price,content,address,img,date,category,user_id.sale_status,read_count-->\n      <el-dialog name=\"商品信息\" :visible.sync=\"fromVisible\" width=\"40%\" :close-on-click-modal=\"false\" destroy-on-close>\n        <el-form label-width=\"100px\" style=\"padding-right: 50px\" :model=\"form\" :rules=\"rules\" ref=\"formRef\">\n          <el-form-item prop=\"name\" label=\"商品名称\">\n            <el-input v-model=\"form.name\" autocomplete=\"off\"></el-input>\n          </el-form-item>\n          <el-form-item prop=\"price\" label=\"价格\">\n            <el-input v-model=\"form.price\" autocomplete=\"off\"></el-input>\n          </el-form-item>\n          <el-form-item prop=\"content\" label=\"详情\">\n            <el-input v-model=\"form.content\" autocomplete=\"off\"></el-input>\n          </el-form-item>\n          <el-form-item prop=\"address\" label=\"地址\">\n            <el-input v-model=\"form.address\" autocomplete=\"off\"></el-input>\n          </el-form-item>\n          <el-form-item prop=\"img\" label=\"图片\">\n            <el-input v-model=\"form.img\" autocomplete=\"off\"></el-input>\n          </el-form-item>\n          <el-form-item prop=\"date\" label=\"日期\">\n            <el-input v-model=\"form.date\" autocomplete=\"off\"></el-input>\n          </el-form-item>\n          <el-form-item prop=\"status\" label=\"审核状态\">\n            <el-input v-model=\"form.date\" autocomplete=\"off\"></el-input>\n          </el-form-item>\n          <el-form-item prop=\"category\" label=\"类别名称\">\n            <el-input v-model=\"form.category\" autocomplete=\"off\"></el-input>\n          </el-form-item>\n          <el-form-item prop=\"user_id\" label=\"用户id\">\n            <el-input v-model=\"form.user_id\" autocomplete=\"off\"></el-input>\n          </el-form-item>\n          <el-form-item prop=\"sale_status\" label=\"售卖状态\">\n            <el-input v-model=\"form.sale_status\" autocomplete=\"off\"></el-input>\n          </el-form-item>\n          <el-form-item prop=\"read_count\" label=\"浏览量\">\n            <el-input v-model=\"form.read_count\" autocomplete=\"off\"></el-input>\n          </el-form-item>\n        </el-form>\n        <div slot=\"footer\" class=\"dialog-footer\">\n          <el-button @click=\"fromVisible = false\">取 消</el-button>\n          <el-button type=\"primary\" @click=\"save\">确 定</el-button>\n        </div>\n      </el-dialog>\n  \n  \n    </div>\n  </template>\n  \n  <script>\n  export default {\n    name: \"Goods\",\n    data() {\n      return {\n        tableData: [],  // 所有的数据\n        pageNum: 1,   // 当前的页码\n        pageSize: 10,  // 每页显示的个数\n        total: 0,\n        name: null,\n        fromVisible: false,\n        form: {},\n        user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n        rules: {\n          name: [\n            {required: true, message: '请输入商品名称', trigger: 'blur'},\n          ]\n        },\n        ids: [],\n        content:'',\n        fromVisible1:false\n      }\n    },\n    created() {\n      this.load(1)\n    },\n    methods: {\n        preview(content){\n            this.content = content\n            this.fromVisible1 = true\n        },\n        changeStatus(row, status){\n            this.$confirm('您确定要操作吗？','确认操作', {type:\"warning\"}).then(response => {\n                this.form = JSON.parse(JSON.stringify(row))\n                this.form.status = status\n                this.$request.put('/goods/update', this.form).then(res => {\n                if (res.code === '200') {  // 表示成功保存\n                    this.$message.success('保存成功')\n                    this.load(1)\n                } else {\n                    this.$message.error(res.msg)  // 弹出错误的信息\n                }\n            })\n            }).catch(err => {})\n            \n        },\n      handleAdd() {   // 新增数据\n        this.form = {}  // 新增数据的时候清空数据\n        this.fromVisible = true   // 打开弹窗\n      },\n      handleEdit(row) {   // 编辑数据\n        this.form = JSON.parse(JSON.stringify(row))  // 给form对象赋值  注意要深拷贝数据\n        this.fromVisible = true   // 打开弹窗\n      },\n      save() {   // 保存按钮触发的逻辑  它会触发新增或者更新\n        this.$refs.formRef.validate((valid) => {\n          if (valid) {\n            this.$request({\n              url: this.form.id ? '/goods/update' : '/goods/add',\n              method: this.form.id ? 'PUT' : 'POST',\n              data: this.form\n            }).then(res => {\n              if (res.code === '200') {  // 表示成功保存\n                this.$message.success('保存成功')\n                this.load(1)\n                this.fromVisible = false\n              } else {\n                this.$message.error(res.msg)  // 弹出错误的信息\n              }\n            })\n          }\n        })\n      },\n      del(id) {   // 单个删除\n        this.$confirm('您确定删除吗？', '确认删除', {type: \"warning\"}).then(response => {\n          this.$request.delete('/goods/delete/' + id).then(res => {\n            if (res.code === '200') {   // 表示操作成功\n              this.$message.success('操作成功')\n              this.load(1)\n            } else {\n              this.$message.error(res.msg)  // 弹出错误的信息\n            }\n          })\n        }).catch(() => {\n        })\n      },\n      handleSelectionChange(rows) {   // 当前选中的所有的行数据\n        this.ids = rows.map(v => v.id)   //  [1,2]\n      },\n      delBatch() {   // 批量删除\n        if (!this.ids.length) {\n          this.$message.warning('请选择数据')\n          return\n        }\n        this.$confirm('您确定批量删除这些数据吗？', '确认删除', {type: \"warning\"}).then(response => {\n          this.$request.delete('/goods/delete/batch', {data: this.ids}).then(res => {\n            if (res.code === '200') {   // 表示操作成功\n              this.$message.success('操作成功')\n              this.load(1)\n            } else {\n              this.$message.error(res.msg)  // 弹出错误的信息\n            }\n          })\n        }).catch(() => {\n        })\n      },\n      load(pageNum) {  // 分页查询\n        if (pageNum) this.pageNum = pageNum\n        this.$request.get('/goods/selectPage', {\n          params: {\n            pageNum: this.pageNum,\n            pageSize: this.pageSize,\n            name: this.name,\n          }\n        }).then(res => {\n            console.log(res);\n          this.tableData = res.data?.list\n          this.total = res.data?.total\n        })\n      },\n      reset() {\n        this.name = null\n        this.load(1)\n      },\n      handleCurrentChange(pageNum) {\n        this.load(pageNum)\n      },\n    }\n  }\n  </script>\n  \n  <style scoped>\n  \n  </style>\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}