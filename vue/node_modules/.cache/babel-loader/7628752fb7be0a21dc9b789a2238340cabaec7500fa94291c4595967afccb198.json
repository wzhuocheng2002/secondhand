{"ast":null,"code":"export default {\n  name: \"Circles\",\n  data() {\n    return {\n      tableData: [],\n      // 所有的数据\n      pageNum: 1,\n      // 当前的页码\n      pageSize: 10,\n      // 每页显示的个数\n      total: 0,\n      name: null,\n      fromVisible: false,\n      form: {},\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      rules: {\n        name: [{\n          required: true,\n          message: '请输入标题',\n          trigger: 'blur'\n        }]\n      },\n      ids: []\n    };\n  },\n  created() {\n    this.load(1);\n  },\n  methods: {\n    handleFileSuccess(response, file, fileList) {\n      this.form.img = response.data;\n    },\n    handleAdd() {\n      // 新增数据\n      this.form = {}; // 新增数据的时候清空数据\n      this.fromVisible = true; // 打开弹窗\n    },\n\n    handleEdit(row) {\n      // 编辑数据\n      this.form = JSON.parse(JSON.stringify(row)); // 给form对象赋值  注意要深拷贝数据\n      this.fromVisible = true; // 打开弹窗\n    },\n\n    save() {\n      // 保存按钮触发的逻辑  它会触发新增或者更新\n      this.$refs.formRef.validate(valid => {\n        if (valid) {\n          this.$request({\n            url: this.form.id ? '/circles/update' : '/circles/add',\n            method: this.form.id ? 'PUT' : 'POST',\n            data: this.form\n          }).then(res => {\n            if (res.code === '200') {\n              // 表示成功保存\n              this.$message.success('保存成功');\n              this.load(1);\n              this.fromVisible = false;\n            } else {\n              this.$message.error(res.msg); // 弹出错误的信息\n            }\n          });\n        }\n      });\n    },\n\n    del(id) {\n      // 单个删除\n      this.$confirm('您确定删除吗？', '确认删除', {\n        type: \"warning\"\n      }).then(response => {\n        this.$request.delete('/circles/delete/' + id).then(res => {\n          if (res.code === '200') {\n            // 表示操作成功\n            this.$message.success('操作成功');\n            this.load(1);\n          } else {\n            this.$message.error(res.msg); // 弹出错误的信息\n          }\n        });\n      }).catch(() => {});\n    },\n    handleSelectionChange(rows) {\n      // 当前选中的所有的行数据\n      this.ids = rows.map(v => v.id); //  [1,2]\n    },\n\n    delBatch() {\n      // 批量删除\n      if (!this.ids.length) {\n        this.$message.warning('请选择数据');\n        return;\n      }\n      this.$confirm('您确定批量删除这些数据吗？', '确认删除', {\n        type: \"warning\"\n      }).then(response => {\n        this.$request.delete('/circles/delete/batch', {\n          data: this.ids\n        }).then(res => {\n          if (res.code === '200') {\n            // 表示操作成功\n            this.$message.success('操作成功');\n            this.load(1);\n          } else {\n            this.$message.error(res.msg); // 弹出错误的信息\n          }\n        });\n      }).catch(() => {});\n    },\n    load(pageNum) {\n      // 分页查询\n      if (pageNum) this.pageNum = pageNum;\n      this.$request.get('/circles/selectPage', {\n        params: {\n          pageNum: this.pageNum,\n          pageSize: this.pageSize,\n          name: this.name\n        }\n      }).then(res => {\n        this.tableData = res.data?.list;\n        this.total = res.data?.total;\n      });\n    },\n    reset() {\n      this.name = null;\n      this.load(1);\n    },\n    handleCurrentChange(pageNum) {\n      this.load(pageNum);\n    }\n  }\n};","map":{"version":3,"names":["name","data","tableData","pageNum","pageSize","total","fromVisible","form","user","JSON","parse","localStorage","getItem","rules","required","message","trigger","ids","created","load","methods","handleFileSuccess","response","file","fileList","img","handleAdd","handleEdit","row","stringify","save","$refs","formRef","validate","valid","$request","url","id","method","then","res","code","$message","success","error","msg","del","$confirm","type","delete","catch","handleSelectionChange","rows","map","v","delBatch","length","warning","get","params","list","reset","handleCurrentChange"],"sources":["src/views/manager/Circles.vue"],"sourcesContent":["<template>\n    <div>\n      <div class=\"search\">\n        <el-input placeholder=\"请输入名称查询\" style=\"width: 200px\" v-model=\"name\"></el-input>\n        <el-button type=\"info\" plain style=\"margin-left: 10px\" @click=\"load(1)\">查询</el-button>\n        <el-button type=\"warning\" plain style=\"margin-left: 10px\" @click=\"reset\">重置</el-button>\n      </div>\n  \n      <div class=\"operation\">\n        <el-button type=\"primary\" plain @click=\"handleAdd\">新增</el-button>\n        <el-button type=\"danger\" plain @click=\"delBatch\">批量删除</el-button>\n      </div>\n      <!-- id title content img user_id time circle comment_count-->\n      <div class=\"table\">\n        <el-table :data=\"tableData\" stripe  @selection-change=\"handleSelectionChange\">\n          <el-table-column type=\"selection\"  align=\"center\"></el-table-column>\n          <el-table-column prop=\"id\" label=\"id\"  align=\"center\" sortable></el-table-column>\n          <el-table-column prop=\"name\" label=\"名称\"  align=\"center\" sortable></el-table-column>\n          <el-table-column prop=\"img\" label=\"缩略图\"  align=\"center\" sortable>\n            <template v-slot=\"scope\">\n            <div style=\"display: flex; align-items: center\">\n            <el-image style=\"width: 40px; height: 40px;\" v-if=\"scope.row.img\"\n                :src=\"scope.row.img\" :preview-src-list=\"[scope.row.img]\"></el-image>\n            </div>\n            </template>\n          </el-table-column>\n          <el-table-column label=\"操作\" width=\"180\" align=\"center\">\n            <template v-slot=\"scope\">\n              <el-button plain type=\"primary\" @click=\"handleEdit(scope.row)\" size=\"mini\">编辑</el-button>\n              <el-button plain type=\"danger\" size=\"mini\" @click=del(scope.row.id)>删除</el-button>\n            </template>\n          </el-table-column>\n        </el-table>\n  \n        <div class=\"pagination\">\n          <el-pagination\n              background\n              @current-change=\"handleCurrentChange\"\n              :current-page=\"pageNum\"\n              :page-sizes=\"[5, 10, 20]\"\n              :page-size=\"pageSize\"\n              layout=\"total, prev, pager, next\"\n              :total=\"total\">\n          </el-pagination>\n        </div>\n      </div>\n  \n  \n      <el-dialog name=\"圈子\" :visible.sync=\"fromVisible\" width=\"40%\" :close-on-click-modal=\"false\" destroy-on-close>\n        <el-form label-width=\"100px\" style=\"padding-right: 50px\" :model=\"form\" :rules=\"rules\" ref=\"formRef\">\n          <el-form-item prop=\"name\" label=\"名称\">\n            <el-input v-model=\"form.name\" autocomplete=\"off\"></el-input>\n          </el-form-item>\n          <el-form-item prop=\"img\" label=\"缩略图\">\n            <el-upload\n                :action=\"$baseUrl + '/files/upload'\"\n                :headers=\"{ token: user.token }\"\n                :on-success=\"handleFileSuccess\"\n            >\n            <el-button type=\"primary\">上传</el-button>\n            </el-upload>\n\n          </el-form-item>\n        </el-form>\n        <div slot=\"footer\" class=\"dialog-footer\">\n          <el-button @click=\"fromVisible = false\">取 消</el-button>\n          <el-button type=\"primary\" @click=\"save\">确 定</el-button>\n        </div>\n      </el-dialog>\n  \n  \n    </div>\n  </template>\n  \n  <script>\n  export default {\n    name: \"Circles\",\n    data() {\n      return {\n        tableData: [],  // 所有的数据\n        pageNum: 1,   // 当前的页码\n        pageSize: 10,  // 每页显示的个数\n        total: 0,\n        name: null,\n        fromVisible: false,\n        form: {},\n        user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n        rules: {\n          name: [\n            {required: true, message: '请输入标题', trigger: 'blur'},\n          ]\n        },\n        ids: []\n      }\n    },\n    created() {\n      this.load(1)\n    },\n    methods: {\n        handleFileSuccess(response, file, fileList) {\n            this.form.img = response.data\n        },\n      handleAdd() {   // 新增数据\n        this.form = {}  // 新增数据的时候清空数据\n        this.fromVisible = true   // 打开弹窗\n      },\n      handleEdit(row) {   // 编辑数据\n        this.form = JSON.parse(JSON.stringify(row))  // 给form对象赋值  注意要深拷贝数据\n        this.fromVisible = true   // 打开弹窗\n      },\n      save() {   // 保存按钮触发的逻辑  它会触发新增或者更新\n        this.$refs.formRef.validate((valid) => {\n          if (valid) {\n            this.$request({\n              url: this.form.id ? '/circles/update' : '/circles/add',\n              method: this.form.id ? 'PUT' : 'POST',\n              data: this.form\n            }).then(res => {\n              if (res.code === '200') {  // 表示成功保存\n                this.$message.success('保存成功')\n                this.load(1)\n                this.fromVisible = false\n              } else {\n                this.$message.error(res.msg)  // 弹出错误的信息\n              }\n            })\n          }\n        })\n      },\n      del(id) {   // 单个删除\n        this.$confirm('您确定删除吗？', '确认删除', {type: \"warning\"}).then(response => {\n          this.$request.delete('/circles/delete/' + id).then(res => {\n            if (res.code === '200') {   // 表示操作成功\n              this.$message.success('操作成功')\n              this.load(1)\n            } else {\n              this.$message.error(res.msg)  // 弹出错误的信息\n            }\n          })\n        }).catch(() => {\n        })\n      },\n      handleSelectionChange(rows) {   // 当前选中的所有的行数据\n        this.ids = rows.map(v => v.id)   //  [1,2]\n      },\n      delBatch() {   // 批量删除\n        if (!this.ids.length) {\n          this.$message.warning('请选择数据')\n          return\n        }\n        this.$confirm('您确定批量删除这些数据吗？', '确认删除', {type: \"warning\"}).then(response => {\n          this.$request.delete('/circles/delete/batch', {data: this.ids}).then(res => {\n            if (res.code === '200') {   // 表示操作成功\n              this.$message.success('操作成功')\n              this.load(1)\n            } else {\n              this.$message.error(res.msg)  // 弹出错误的信息\n            }\n          })\n        }).catch(() => {\n        })\n      },\n      load(pageNum) {  // 分页查询\n        if (pageNum) this.pageNum = pageNum\n        this.$request.get('/circles/selectPage', {\n          params: {\n            pageNum: this.pageNum,\n            pageSize: this.pageSize,\n            name: this.name,\n          }\n        }).then(res => {\n          this.tableData = res.data?.list\n          this.total = res.data?.total\n        })\n      },\n      reset() {\n        this.name = null\n        this.load(1)\n      },\n      handleCurrentChange(pageNum) {\n        this.load(pageNum)\n      },\n    }\n  }\n  </script>\n  \n  <style scoped>\n  \n  </style>\n  "],"mappings":"AA2EA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,SAAA;MAAA;MACAC,OAAA;MAAA;MACAC,QAAA;MAAA;MACAC,KAAA;MACAL,IAAA;MACAM,WAAA;MACAC,IAAA;MACAC,IAAA,EAAAC,IAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC,OAAA;MACAC,KAAA;QACAb,IAAA,GACA;UAAAc,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;MAEA;MACAC,GAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,IAAA;EACA;EACAC,OAAA;IACAC,kBAAAC,QAAA,EAAAC,IAAA,EAAAC,QAAA;MACA,KAAAjB,IAAA,CAAAkB,GAAA,GAAAH,QAAA,CAAArB,IAAA;IACA;IACAyB,UAAA;MAAA;MACA,KAAAnB,IAAA;MACA,KAAAD,WAAA;IACA;;IACAqB,WAAAC,GAAA;MAAA;MACA,KAAArB,IAAA,GAAAE,IAAA,CAAAC,KAAA,CAAAD,IAAA,CAAAoB,SAAA,CAAAD,GAAA;MACA,KAAAtB,WAAA;IACA;;IACAwB,KAAA;MAAA;MACA,KAAAC,KAAA,CAAAC,OAAA,CAAAC,QAAA,CAAAC,KAAA;QACA,IAAAA,KAAA;UACA,KAAAC,QAAA;YACAC,GAAA,OAAA7B,IAAA,CAAA8B,EAAA;YACAC,MAAA,OAAA/B,IAAA,CAAA8B,EAAA;YACApC,IAAA,OAAAM;UACA,GAAAgC,IAAA,CAAAC,GAAA;YACA,IAAAA,GAAA,CAAAC,IAAA;cAAA;cACA,KAAAC,QAAA,CAAAC,OAAA;cACA,KAAAxB,IAAA;cACA,KAAAb,WAAA;YACA;cACA,KAAAoC,QAAA,CAAAE,KAAA,CAAAJ,GAAA,CAAAK,GAAA;YACA;UACA;QACA;MACA;IACA;;IACAC,IAAAT,EAAA;MAAA;MACA,KAAAU,QAAA;QAAAC,IAAA;MAAA,GAAAT,IAAA,CAAAjB,QAAA;QACA,KAAAa,QAAA,CAAAc,MAAA,sBAAAZ,EAAA,EAAAE,IAAA,CAAAC,GAAA;UACA,IAAAA,GAAA,CAAAC,IAAA;YAAA;YACA,KAAAC,QAAA,CAAAC,OAAA;YACA,KAAAxB,IAAA;UACA;YACA,KAAAuB,QAAA,CAAAE,KAAA,CAAAJ,GAAA,CAAAK,GAAA;UACA;QACA;MACA,GAAAK,KAAA,QACA;IACA;IACAC,sBAAAC,IAAA;MAAA;MACA,KAAAnC,GAAA,GAAAmC,IAAA,CAAAC,GAAA,CAAAC,CAAA,IAAAA,CAAA,CAAAjB,EAAA;IACA;;IACAkB,SAAA;MAAA;MACA,UAAAtC,GAAA,CAAAuC,MAAA;QACA,KAAAd,QAAA,CAAAe,OAAA;QACA;MACA;MACA,KAAAV,QAAA;QAAAC,IAAA;MAAA,GAAAT,IAAA,CAAAjB,QAAA;QACA,KAAAa,QAAA,CAAAc,MAAA;UAAAhD,IAAA,OAAAgB;QAAA,GAAAsB,IAAA,CAAAC,GAAA;UACA,IAAAA,GAAA,CAAAC,IAAA;YAAA;YACA,KAAAC,QAAA,CAAAC,OAAA;YACA,KAAAxB,IAAA;UACA;YACA,KAAAuB,QAAA,CAAAE,KAAA,CAAAJ,GAAA,CAAAK,GAAA;UACA;QACA;MACA,GAAAK,KAAA,QACA;IACA;IACA/B,KAAAhB,OAAA;MAAA;MACA,IAAAA,OAAA,OAAAA,OAAA,GAAAA,OAAA;MACA,KAAAgC,QAAA,CAAAuB,GAAA;QACAC,MAAA;UACAxD,OAAA,OAAAA,OAAA;UACAC,QAAA,OAAAA,QAAA;UACAJ,IAAA,OAAAA;QACA;MACA,GAAAuC,IAAA,CAAAC,GAAA;QACA,KAAAtC,SAAA,GAAAsC,GAAA,CAAAvC,IAAA,EAAA2D,IAAA;QACA,KAAAvD,KAAA,GAAAmC,GAAA,CAAAvC,IAAA,EAAAI,KAAA;MACA;IACA;IACAwD,MAAA;MACA,KAAA7D,IAAA;MACA,KAAAmB,IAAA;IACA;IACA2C,oBAAA3D,OAAA;MACA,KAAAgB,IAAA,CAAAhB,OAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}