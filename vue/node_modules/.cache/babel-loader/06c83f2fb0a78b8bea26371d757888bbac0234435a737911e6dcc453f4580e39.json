{"ast":null,"code":"export default {\n  name: \"Feedback\",\n  data() {\n    return {\n      tableData: [],\n      // 所有的数据\n      pageNum: 1,\n      // 当前的页码\n      pageSize: 10,\n      // 每页显示的个数\n      total: 0,\n      title: null,\n      formVisible: false,\n      formVisible1: false,\n      form: {},\n      content: '',\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      rules: {\n        title: [{\n          required: true,\n          message: '请输入标题',\n          trigger: 'blur'\n        }]\n      },\n      ids: []\n    };\n  },\n  created() {\n    this.load(1);\n  },\n  methods: {\n    preview(content) {\n      this.content = content;\n      this.formVisible1 = true;\n    },\n    handleFileSuccess(response, file, fileList) {\n      this.form.img = response.data;\n    },\n    handleAdd() {\n      // 新增数据\n      this.form = {}; // 新增数据的时候清空数据\n      this.formVisible = true; // 打开弹窗\n    },\n\n    handleEdit(row) {\n      // 编辑数据\n      this.form = JSON.parse(JSON.stringify(row)); // 给form对象赋值  注意要深拷贝数据\n      this.formVisible = true; // 打开弹窗\n    },\n\n    save() {\n      // 保存按钮触发的逻辑  它会触发新增或者更新\n      this.$refs.formRef.validate(valid => {\n        if (valid) {\n          this.$request({\n            url: this.form.id ? '/feedback/update' : '/feedback/add',\n            method: this.form.id ? 'PUT' : 'POST',\n            data: this.form\n          }).then(res => {\n            console.log(\"提交的数据:\", this.form);\n            if (res.code === '200') {\n              // 表示成功保存\n              this.$message.success('保存成功');\n              this.load(1);\n              this.formVisible = false;\n            } else {\n              this.$message.error(res.msg); // 弹出错误的信息\n            }\n          });\n        }\n      });\n    },\n\n    del(id) {\n      // 单个删除\n      this.$confirm('您确定删除吗？', '确认删除', {\n        type: \"warning\"\n      }).then(response => {\n        this.$request.delete('/feedback/delete/' + id).then(res => {\n          if (res.code === '200') {\n            // 表示操作成功\n            this.$message.success('操作成功');\n            this.load(1);\n          } else {\n            this.$message.error(res.msg); // 弹出错误的信息\n          }\n        });\n      }).catch(() => {});\n    },\n    handleSelectionChange(rows) {\n      // 当前选中的所有的行数据\n      this.ids = rows.map(v => v.id); //  [1,2]\n    },\n\n    delBatch() {\n      // 批量删除\n      if (!this.ids.length) {\n        this.$message.warning('请选择数据');\n        return;\n      }\n      this.$confirm('您确定批量删除这些数据吗？', '确认删除', {\n        type: \"warning\"\n      }).then(response => {\n        this.$request.delete('/feedback/delete/batch', {\n          data: this.ids\n        }).then(res => {\n          if (res.code === '200') {\n            // 表示操作成功\n            this.$message.success('操作成功');\n            this.load(1);\n          } else {\n            this.$message.error(res.msg); // 弹出错误的信息\n          }\n        });\n      }).catch(() => {});\n    },\n    load(pageNum) {\n      // 分页查询\n      if (pageNum) this.pageNum = pageNum;\n      this.$request.get('/feedback/selectPage', {\n        params: {\n          pageNum: this.pageNum,\n          pageSize: this.pageSize,\n          title: this.title\n        }\n      }).then(res => {\n        this.tableData = res.data?.list;\n        this.total = res.data?.total;\n      });\n    },\n    reset() {\n      this.title = null;\n      this.load(1);\n    },\n    handleCurrentChange(pageNum) {\n      this.load(pageNum);\n    }\n  }\n};","map":{"version":3,"names":["name","data","tableData","pageNum","pageSize","total","title","formVisible","formVisible1","form","content","user","JSON","parse","localStorage","getItem","rules","required","message","trigger","ids","created","load","methods","preview","handleFileSuccess","response","file","fileList","img","handleAdd","handleEdit","row","stringify","save","$refs","formRef","validate","valid","$request","url","id","method","then","res","console","log","code","$message","success","error","msg","del","$confirm","type","delete","catch","handleSelectionChange","rows","map","v","delBatch","length","warning","get","params","list","reset","handleCurrentChange"],"sources":["src/views/manager/Feedback.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <div class=\"search\">\r\n        <el-input placeholder=\"请输入主题查询\" style=\"width: 200px\" v-model=\"title\"></el-input>\r\n        <el-button type=\"info\" plain style=\"margin-left: 10px\" @click=\"load(1)\">查询</el-button>\r\n        <el-button type=\"warning\" plain style=\"margin-left: 10px\" @click=\"reset\">重置</el-button>\r\n      </div>\r\n  \r\n      <div class=\"operation\">\r\n        <el-button type=\"danger\" plain @click=\"delBatch\">批量删除</el-button>\r\n      </div>\r\n        <!-- id title content img user_id time circle comment_count-->\r\n      <div class=\"table\">\r\n        <el-table :data=\"tableData\" stripe  @selection-change=\"handleSelectionChange\">\r\n          <el-table-column type=\"selection\"  align=\"center\"></el-table-column>\r\n          <el-table-column prop=\"id\" label=\"id\"  align=\"center\" sortable></el-table-column>\r\n          <el-table-column prop=\"title\" label=\"主题\"  align=\"center\" ></el-table-column>\r\n          <el-table-column prop=\"content\" label=\"内容\"  align=\"center\" ></el-table-column>\r\n          <el-table-column prop=\"phone\" label=\"联系方式\"  align=\"center\" ></el-table-column>\r\n          <el-table-column prop=\"email\" label=\"邮件\"  align=\"center\" ></el-table-column>\r\n          <el-table-column prop=\"reply\" label=\"回复\"  align=\"center\" ></el-table-column>\r\n          <el-table-column prop=\"createTime\" label=\"创建时间\"  align=\"center\" ></el-table-column>\r\n          <el-table-column prop=\"userId\" label=\"用户Id\"  align=\"center\" ></el-table-column>\r\n          <el-table-column prop=\"userName\" label=\"用户名称\"  align=\"center\" sortable></el-table-column>\r\n          <el-table-column label=\"操作\" width=\"220\" align=\"center\">\r\n            <template v-slot=\"scope\">\r\n                <el-button plain type=\"primary\" size=\"mini\" @click=handleEdit(scope.row)>回复</el-button>\r\n              <el-button plain type=\"danger\" size=\"mini\" @click=del(scope.row.id)>删除</el-button>\r\n            </template>\r\n          </el-table-column>\r\n        </el-table>\r\n  \r\n        <div class=\"pagination\">\r\n          <el-pagination\r\n              background\r\n              @current-change=\"handleCurrentChange\"\r\n              :current-page=\"pageNum\"\r\n              :page-sizes=\"[5, 10, 20]\"\r\n              :page-size=\"pageSize\"\r\n              layout=\"total, prev, pager, next\"\r\n              :total=\"total\">\r\n          </el-pagination>\r\n        </div>\r\n      </div>\r\n  \r\n        <el-dialog title=\"文章内容\" :visible.sync=\"formVisible1\" width=\"40%\" :close-on-click-modal=\"false\" destroy-on-close>\r\n            <div class=\"w-e-text\">\r\n                <div v-html=\"content\"></div>\r\n            </div>\r\n        <div slot=\"footer\" class=\"dialog-footer\">\r\n            <el-button @click=\"formVisible1=false\">关 闭</el-button>\r\n        </div>\r\n        </el-dialog>\r\n  \r\n  \r\n      <el-dialog name=\"反馈信息\" :visible.sync=\"formVisible\" width=\"40%\" :close-on-click-modal=\"false\" destroy-on-close>\r\n        <el-form ref=\"formRef\" :model=\"form\" label-width=\"100px\">\r\n          <el-form-item prop=\"reply\" label=\"回复\">\r\n            <el-input type=\"textarea\" v-model=\"form.reply\" placeholder=\"回复\"></el-input>\r\n          </el-form-item>\r\n        </el-form>\r\n        <div slot=\"footer\" class=\"dialog-footer\">\r\n          <el-button @click=\"formVisible = false\">取 消</el-button>\r\n          <el-button type=\"primary\" @click=\"save\">确 定</el-button>\r\n        </div>\r\n      </el-dialog>\r\n  \r\n  \r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n    name: \"Feedback\",\r\n    data() {\r\n      return {\r\n        tableData: [],  // 所有的数据\r\n        pageNum: 1,   // 当前的页码\r\n        pageSize: 10,  // 每页显示的个数\r\n        total: 0,\r\n        title: null,\r\n        formVisible: false,\r\n        formVisible1:false,\r\n        form: {},\r\n        content:'',\r\n        user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\r\n        rules: {\r\n          title: [\r\n            {required: true, message: '请输入标题', trigger: 'blur'},\r\n          ]\r\n        },\r\n        ids: []\r\n      }\r\n    },\r\n    created() {\r\n      this.load(1)\r\n    },\r\n    methods: {\r\n        preview(content){\r\n\t        this.content = content\r\n\t        this.formVisible1 = true\r\n        },\r\n        handleFileSuccess(response, file, fileList) {\r\n            this.form.img = response.data\r\n        },\r\n      handleAdd() {   // 新增数据\r\n        this.form = {}  // 新增数据的时候清空数据\r\n        this.formVisible = true   // 打开弹窗\r\n      },\r\n      handleEdit(row) {   // 编辑数据\r\n        this.form = JSON.parse(JSON.stringify(row))  // 给form对象赋值  注意要深拷贝数据\r\n        this.formVisible = true   // 打开弹窗\r\n      },\r\n      save() {   // 保存按钮触发的逻辑  它会触发新增或者更新\r\n        this.$refs.formRef.validate((valid) => {\r\n          if (valid) {\r\n            this.$request({\r\n              url: this.form.id ? '/feedback/update' : '/feedback/add',\r\n              method: this.form.id ? 'PUT' : 'POST',\r\n              data: this.form\r\n            }).then(res => {\r\n                console.log(\"提交的数据:\", this.form);\r\n              if (res.code === '200') {  // 表示成功保存\r\n                this.$message.success('保存成功')\r\n                this.load(1)\r\n                this.formVisible = false\r\n              } else {\r\n                this.$message.error(res.msg)  // 弹出错误的信息\r\n              }\r\n            })\r\n          }\r\n        })\r\n      },\r\n      del(id) {   // 单个删除\r\n        this.$confirm('您确定删除吗？', '确认删除', {type: \"warning\"}).then(response => {\r\n          this.$request.delete('/feedback/delete/' + id).then(res => {\r\n            if (res.code === '200') {   // 表示操作成功\r\n              this.$message.success('操作成功')\r\n              this.load(1)\r\n            } else {\r\n              this.$message.error(res.msg)  // 弹出错误的信息\r\n            }\r\n          })\r\n        }).catch(() => {\r\n        })\r\n      },\r\n      handleSelectionChange(rows) {   // 当前选中的所有的行数据\r\n        this.ids = rows.map(v => v.id)   //  [1,2]\r\n      },\r\n      delBatch() {   // 批量删除\r\n        if (!this.ids.length) {\r\n          this.$message.warning('请选择数据')\r\n          return\r\n        }\r\n        this.$confirm('您确定批量删除这些数据吗？', '确认删除', {type: \"warning\"}).then(response => {\r\n          this.$request.delete('/feedback/delete/batch', {data: this.ids}).then(res => {\r\n            if (res.code === '200') {   // 表示操作成功\r\n              this.$message.success('操作成功')\r\n              this.load(1)\r\n            } else {\r\n              this.$message.error(res.msg)  // 弹出错误的信息\r\n            }\r\n          })\r\n        }).catch(() => {\r\n        })\r\n      },\r\n      load(pageNum) {  // 分页查询\r\n        if (pageNum) this.pageNum = pageNum\r\n        this.$request.get('/feedback/selectPage', {\r\n          params: {\r\n            pageNum: this.pageNum,\r\n            pageSize: this.pageSize,\r\n            title: this.title,\r\n          }\r\n        }).then(res => {\r\n          this.tableData = res.data?.list\r\n          this.total = res.data?.total\r\n        })\r\n      },\r\n      reset() {\r\n        this.title = null\r\n        this.load(1)\r\n      },\r\n      handleCurrentChange(pageNum) {\r\n        this.load(pageNum)\r\n      },\r\n    }\r\n  }\r\n  </script>\r\n  \r\n  <style scoped>\r\n  \r\n  </style>\r\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}